*,::after,::before{
    margin: 0;
}
html,body{
    width: 100%;
    height: 100%;
}
.wrap{
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}
.baidulogo{
    width: 270px;
}
.inner{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-top: -25vh;
}
.input_wrap{
    width: 90vw;
    max-width: 648px;
    height: 44px;
    display: flex;
    margin-top: 16px;
}
.inputs{
    padding: 0px 16px;
    font-size: 16px;
    line-height: 40px;
    margin: 0;
    vertical-align: top;
    outline: 0;
    box-shadow: none;
    border-radius: 10px 0 0 10px;
    border: 2px solid #c4c7ce;
    background: #fff;
    color: #222;
    overflow: hidden;
    box-sizing: content-box;
    flex: 1;
    border-right: 0;
}
.buttons{
    text-align: center;
    cursor: pointer;
    width: 108px;
    height: 44px;
    line-height: 45px;
    padding: 0;
    background: 0 0;
    background-color: #4e6ef2;
    border-radius: 0 10px 10px 0;
    font-size: 17px;
    color: #fff;
    box-shadow: none;
    font-weight: 400;
    border: none;
    outline: 0;
    position: relative;
}

.shubiao{
    position: absolute;
    width: 30px;
    height: 30px;
    left: 50%;
    top: 50%;
    transform: translateX(-30vw) translateY(0px);
    transition: transform 1s;
    visibility:hidden;
}
.shubiao_click{
    visibility:initial;
     /* 使用动画 */
      /* 属性名： 动画名(必写) 运动时间(必写) 速度曲线 延迟时间 运动次数(infinite是无限的意思) 运动方向 执行完毕时的状态  */
      /* 速度曲线：linear（匀速线性运动） ease-in-out(开始和结束慢) */
      /* 运动方向：alternate 逆向播放 回来的那一次也算一次次数 */
      /* 结束状态：forward(停留在结束状态) 默认停留在起始状态 */
    animation: shubiaoClick 1.2s  linear forwards;
}

@keyframes shubiaoClick {
    0% {
        transform: translateX(-30vw) translateY(0px) scale(1); 
    }
    70%{
        transform: translateX(0) translateY(0px) scale(1);
    }
    80%{
        transform: translateX(0) translateY(0px) scale(0.8);

    }
    100%{
        transform: translateX(0) translateY(0px) scale(1);
    }
}